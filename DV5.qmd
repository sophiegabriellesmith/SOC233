---
title: "DV5"
format: html
embed-resources: true
editor: visual
---

# Chapter 5 - Data Visualization

Here, we are going to practice some of the skills emphasized in Chapter 5. At first, it may seem that a lot of the skills are similar to those we learned in Modern Dive. I have two responses to that. First, you are right; repetition is important. That's how we learn things. Second, this chapter presents some incredibly handy tricks that as a Data Analyst you will use all the time. In these exercises, we are going to be using data from the WNCAA tournament.

As always, let's begin by reading in the data.

```{r message = FALSE}
library(tidyverse)
```

```{r}
wncaa <- read_csv("https://raw.githubusercontent.com/vaiseys/dav-course/main/Data/wncaa.csv")

wncaa
```

We have data for all teams that have made it to the WNCAA tournament. We have a wealth of information from `reg_percent`, the percentage of wins in the regular season, to the place they ended in a given tournament (`tourney_finish`).

## Question 1

Let's practice some of the summarizing skills that Healy introduces. We are going to examine the percentage of tournaments that schools have won.

First, `filter` the data-set for observations where `tourney_finish` equals `Champ`.

```{r}
champ_only <- wncaa %>% 
  filter(tourney_finish == "Champ")
```

Now, use `group_by` and `summarize` to calculate the percentage of tournaments each team has.

```{r}
perc_by_tourn <- champ_only %>% 
  group_by(school) %>% 
  summarize(number = n()) %>%
    mutate(freq = number / sum(number),
           pct = round((freq*100), 0))

perc_by_tourn
```

Plot a bar-plot that shows these percentages by school.

```{r}
ggplot(perc_by_tourn,
       aes(x = school, y = pct)) +
  labs(title = "Percentage of Tournaments ending in Championship by School", 
       x = "School", y = "Percentage of Tournament Wins (%)", caption = "Source: WNCAA") +
  scale_y_continuous(limits = c(0, 100)) +
  geom_col(position = "dodge2", fill = "purple") +
  theme_minimal() +
  coord_flip()
```

**What patterns do you see? Who are the two teams that have won the most?**

-   On the bar-plot, it is apparent that two teams have won the most tournaments as "champions." Those two schools include: UConn (30%) and Tennessee (22%). Otherwise, most other schools have only won tournaments as "champions" only 3-5% of the time, depending on the specific school.

## Question 2

Let's now look at how the top teams have been seeded as they enter into the tournament. Let's begin by creating a data-set that includes just the "top teams". How are we going to do this? Well, let's take the teams that show up in your bar plot above. We are going to work with the data-set that only includes teams that have ever won the tournament. I'll show you how to do it.

The data-set I created for the plot above is called `champ_only`. Let's get the names of the champions:

```{r}
champ_names <- unique(champ_only$school)

champ_names
```

Now, we filter our original name so that only these schools are included.

```{r}
winners <- wncaa %>% 
  filter(school %in%  champ_names)

winners
```

Now, make a plot that shows box-plots for the distribution of `seeds` for each school. Make sure you use `coord_flip()` so that the school names are legible.

```{r}
ggplot(winners, 
       aes(x = school, y = seed, fill = school)) +
  labs(title = "Distribution of Initial Rankings by School", 
       x = "School", y = "Seed", caption = "Source: WNCAA",
       fill = "School") +
  geom_boxplot() +
  coord_flip()
```

These days, it's good practice to add all the data points in addition to the box-plot. You can use `geom_jitter()` to do this. Don't forget to use `outlier.shape = NA` in the box-plot so you don't plot the outliers twice.

```{r}
ggplot(winners, 
       aes(x = school, y = seed, fill = school)) +
  labs(title = "Distribution of Initial Rankings by School", 
       x = "School", y = "Seed", caption = "Source: WNCAA",
       fill = "School") +
  geom_boxplot(outlier.shape = NA) +
  geom_jitter() +
  coord_flip()
```

We will also want to organize the plots so that they convey information more clearly. Use the `reorder()` trick to show the distributions in a an order that is easier to understand. You will need to calculate some school-specific statistics to use for the reordering. (You might find `group_by()` and `mutate()` valuable here, although there are several ways to do this.)

```{r}
winners <- winners %>%  
  group_by(school) %>%  
  mutate(mean_seed = mean(seed, na.rm = TRUE)) %>% 
  ungroup()
```

```{r}
ggplot(winners, 
       aes(x = reorder(school, -mean_seed), y = seed, fill = school)) +
  labs(title = "Distribution of Initial Rankings by School", 
       x = "School", y = "Seed", caption = "Source: WNCAA",
       fill = "School") +
  geom_boxplot(outlier.shape = NA) +
  geom_jitter() +
  coord_flip()
```

**Describe the results? Any surprises?**

-   The box-plots for Tennessee and UConn are situated closest to 1 on the x-axis, which corresponds to a lower seed. This means that they received a higher initial ranking. Similarly, the whiskers for Tennessee and UConn are relatively short, indicating a lack of variability in the data, which is also proven by the density of data-points around 1. In other words, Tennessee and UConn receive a higher initial ranking quite often. Overall, the box-plot is unsurprising for Tennessee and UConn, given their percentage of tournaments won as "champions."

Try to make the same plot using `geom_violin()` instead of `geom_boxplot()`.

```{r}
ggplot(winners, 
       aes(x = reorder(school, -mean_seed), y = seed, fill = school)) +
  labs(title = "Distribution of Initial Rankings by School", 
       x = "School", y = "Seed", caption = "Source: WNCAA",
        fill = "School") +
  geom_violin() +
  coord_flip()
```

**Which visualization do you think is more informative?**

-   From what I can see, `geom_violin` serves as a blend of `geom_boxplot` and `geom_density`. It demonstrates both the spread and the density of data-points without the addition of data-points via `geom_jitter`.

-   However, barring any extremes (i.e., Tennessee or UConn), `geom_violin` fails to visually capture the differences among the other schools. In addition, it does not depict that numerical summaries, such as the median or interquartile range, that `geom_boxplot` does to demonstrate variability in data.

-   Although merits to `geom_violin`, I prefer `geom_boxplot` in tandem with `geom_jitter`, since it can visually and numerically quantify spread, as well as still visually indicate the density of data-points and highlight outliers.

## Question 3

Try making the plot above but using `geom_point` only.

```{r}
ggplot(winners, 
       aes(x = school, y = seed, color = school)) +
  labs(title = "Distribution of Initial Rankings by School", 
       x = "School", y = "Seed", caption = "Source: WNCAA",
       color = "School") +
  geom_point() +
  geom_jitter() +
  coord_flip()
```

**Why does it not work very well?**

-   Without `geom_jitter`, the scatter-plot above only demonstrates a handful of data-points, which leads me to suspect there are overcrowded data-points. With `geom_point` alone, the data is arbitrary, as it does not visually demonstrate any sort of trends in spread, density, etc. Thus, it is difficult to draw conclusions on the data. However, even with `geom_jitter`, the graph still remains a poor depiction of spread, density, and outliers.

## Question 4

Okay, now let's try the `summarize_if()` verb. Let's make a new data frame by taking the `winners` data-set, grouping by school, and take the `mean()` and `sd()` of the columns, **if** they are numeric. HINT: you can also use the newer `across()` syntax for this if you prefer. It looks like this:

```{r}
winners_mean_sd <- winners  %>%  
  group_by(school) %>%  
  summarize(across(c(seed, conf_w, conf_l, conf_percent, reg_w, 
                     reg_l, reg_percent, tourney_w, tourney_l, 
                     full_w, full_l, full_percent), 
                   .fns = list(mean = mean,
                        sd = sd)))
```

Let's explore the average win percentage of these schools across the seasons. In your new data-set, this column should be called `reg_percent_mean`. Make a dot plot, where this column is in the y-axis and school is the x-axis. Again, use our tricks, `coord_flip` and `reorder` to make the plot legible. (Or you can specify the proper axes from the start if you like. Sometimes this is easier, but not always!)

```{r}
ggplot(winners_mean_sd, 
       aes(x = reorder(school, reg_percent_mean), 
           y = reg_percent_mean, color = school)) +
  labs(title = "Average Win Percentage by School", 
       x = "School", y = "Average Win Percentage (%)", 
       caption = "Source: WNCAA", color = "School") +
  geom_point() +
  theme_minimal() +
  coord_flip()
```

**Describe the results. Which tournament winner had the lowest regular season win percentage?**

-   Texas A&M had the lowest regular season win percentage at approximately 73%, on average, whereas UConn had the highest regular season win percentage at approximately 97%. Surprisingly, however, Tennessee only had the fifth-highest regular season win percentage (on average) at approximately 83%, which is surprising given its other successes detailed above.

Now, let's try to take into account the standard deviation. Use the `geom_pointrange` to show the intervals of one standard deviation below and above the mean (just like Figure 5.15 in the online version of socviz.co).

```{r}
ggplot(winners_mean_sd, 
       aes(x = reorder(school, reg_percent_mean), 
           y = reg_percent_mean, color = school)) +
  labs(title = "Average Win Percentage by School", 
       x = "School", y = "Average Win Percentage (%)", 
       caption = "Source: WNCAA", color = "School") +
  geom_pointrange(mapping = aes(ymin = reg_percent_mean - reg_percent_sd,
       ymax = reg_percent_mean + reg_percent_sd)) +
  theme_minimal() +
  coord_flip()
```

**What is the school with the narrowest interval? What does this mean?**

-   The school with the narrowest interval is Texas A&M, which indicates low variance in the data-points, especially around the mean. In other words, the regular season win percentage of Texas A&M does not fluctuate that often, so it is traditional for Texas A&M to experience a regular season win percentage within the range of 68% to 79%.

Can you make the same plot using `geom_linerange` ?

```{r}
ggplot(winners_mean_sd, 
       aes(x = reorder(school, reg_percent_mean), 
           y = reg_percent_mean, color = school)) +
  labs(title = "Average Win Percentage by School", 
       x = "School", y = "Average Win Percentage (%)", 
       caption = "Source: WNCAA", color = "School") +
  geom_linerange(mapping = aes(ymin = reg_percent_mean - reg_percent_sd,
       ymax = reg_percent_mean + reg_percent_sd)) +
  theme_minimal() +
  coord_flip()
```

**Do you think this is a good or bad idea? Why?**

-   Without the addition of `geom_point`, the sole use of `geom_linerange` is a bad idea, as it fails to depict the observed data-points for the mean, as shown in the previous graph. Given the lack of data-points at the mean, one cannot draw any solid conclusions from the graph aside from differences in variation by school.
